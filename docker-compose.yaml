version: "3"

services:
  agent:
    image: golang:1.14
    volumes:
      - .:/app
    working_dir: /app
    command:
      - go
      - run
      - cmd/agent/main.go
      - -t
      - targets.yaml
      - -b
      - ${KAFKA_BROKERS}
      - -r
      - ${KAFKA_TOPIC}
      - --certFile
      - /app/service.cert
      - --keyFile
      - /app/service.key
      - --caFile
      - /app/ca.pem

  resultsprocessor:
    image: golang:1.14
    volumes:
      - .:/app
    working_dir: /app
    command:
      - go
      - run
      - cmd/resultsprocessor/main.go
      - -b
      - ${KAFKA_BROKERS}
      - -r
      - ${KAFKA_TOPIC}
      - --certFile
      - /app/service.cert
      - --keyFile
      - /app/service.key
      - --caFile
      - /app/ca.pem
      - -db
      - ${POSTGRES_URI}

  init_db:
    image: golang:1.14
    volumes:
      - .:/app
    working_dir: /app/migrations
    command:
      - ./migrate.sh
      - init
      - ${POSTGRES_URI}

  reset_db:
    image: golang:1.14
    volumes:
      - .:/app
    working_dir: /app/migrations
    command:
      - ./migrate.sh
      - reset
      - "${POSTGRES_URI}"

  unit_tests:
    image: golang:1.14
    volumes:
      - .:/app
    working_dir: /app
    env_file:
      - .env
    command:
      - go
      - test
      - ./internal/...

  e2e_tests:
    image: golang:1.14
    depends_on:
      - reset_db
    volumes:
      - .:/app
    working_dir: /app
    env_file:
      - .env
    command:
      - go
      - test
      - ./e2e
